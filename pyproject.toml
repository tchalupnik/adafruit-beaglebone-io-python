[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "Adafruit_BBIO"
version = "1.2.0"
authors = [
    {name = "Justin Cooper", email = "justin@adafruit.com"},
]
description = "A module to control BeagleBone IO channels"
readme = "README.md"
license = {text = "MIT"}
keywords = ["Adafruit", "BeagleBone", "IO", "GPIO", "PWM", "ADC"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Operating System :: POSIX :: Linux",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development",
    "Topic :: Home Automation",
    "Topic :: System :: Hardware",
]
requires-python = ">=3.10"

[project.urls]
Homepage = "https://github.com/adafruit/adafruit-beaglebone-io-python/"
Repository = "https://github.com/adafruit/adafruit-beaglebone-io-python/"
Documentation = "http://adafruit-beaglebone-io-python.readthedocs.io/"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "pytest-cov>=4.0",
    "twine>=4.0",
]

[tool.setuptools]
packages = ["Adafruit_BBIO", "overlays"]
py-modules = ["Adafruit_I2C"]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.h", "*.dts"]

# UV configuration
[tool.uv]
dev-dependencies = [
    "pytest>=6.0",
    "ruff>=0.1.0", 
    "mypy>=1.0",
    "pytest-cov>=4.0",
    "twine>=4.0",
]

# Ruff configuration (replaces black + flake8 + isort)
[tool.ruff]
line-length = 88
target-version = "py310"

# Only include Python files and directories
include = ["*.py", "*.pyi"]

# Exclude C++ source code and build artifacts
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "*.egg-info",
    "build",
    "dist",
    "source/",           # C++ source code
    "m4/",              # Autotools macros
    "adafruit-beaglebone-io-python-origin/",  # Legacy code
    "udev/",            # System rules
    "*.c",              # C source files
    "*.h",              # C header files
    "*.cpp",            # C++ source files
    "*.hpp",            # C++ header files
    "configure.ac",     # Autotools config
    "Makefile.am",      # Autotools makefile
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E203", # whitespace before ':'
    "W503", # line break before binary operator
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

# Only check Python files in these directories
files = ["Adafruit_BBIO", "overlays", "test"]

# Exclude C++ and build directories
exclude = [
    "source/",
    "build/",
    "dist/",
    "adafruit-beaglebone-io-python-origin/",
]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "test",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage configuration
[tool.coverage.run]
source = ["Adafruit_BBIO"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
